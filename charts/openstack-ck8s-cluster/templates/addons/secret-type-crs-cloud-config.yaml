{{- if .Values.cloudCredentialsSecretName -}}
{{- $secretName := include "openstack-ck8s-cluster.cloudCredentialsSecretName" . -}}
{{- $existingSecret := lookup "v1" "Secret" .Release.Namespace $secretName  -}}
{{- if $existingSecret }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "openstack-ck8s-cluster.cloudCredentialsSecretName" . }}-for-crs
  labels: {{ include "openstack-ck8s-cluster.componentLabels" (list . "cloud-credentials") | nindent 4 }}
  annotations:
    helm.sh/resource-policy: keep
type: addons.cluster.x-k8s.io/resource-set
stringData:
  my-target-secret.yaml: |
    apiVersion: v1
    kind: Secret
    metadata:
      name: cloud-config-credentials
      namespace: openstack-system
    type: Opaque
    data:
      {{- range $key, $value := $existingSecret.data }}
      {{ $key }}: {{ $value }}
      {{- end }}
{{- else }}
{{- fail "Secret specified in cloudCredentialsSecretName not found" }}
{{- end }}
{{- else if .Values.clouds }}
{{- $cloud := index .Values.clouds .Values.cloudName }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "openstack-ck8s-cluster.cloudCredentialsSecretName" . }}-for-crs
  labels: {{ include "openstack-ck8s-cluster.componentLabels" (list . "cloud-credentials") | nindent 4 }}
  annotations:
    helm.sh/resource-policy: keep
type: addons.cluster.x-k8s.io/resource-set
stringData:
  my-target-secret.yaml: |
    apiVersion: v1
    kind: Secret
    metadata:
      name: cloud-config-credentials
      namespace: openstack-system
    type: Opaque
    stringData:
      clouds.yaml: |
        clouds:
          {{ printf "%s:" .Values.cloudName }}
            {{ index .Values.clouds .Values.cloudName | toYaml | indent 12 | trim }}
      {{- with .Values.cloudCACert }}
      cacert: |
        {{ . | indent 4 | trim }}
      {{- end }}
{{- else }}
{{- fail "clouds must be specified if cloudCredentialsSecretName is not given" }}
{{- end }}
