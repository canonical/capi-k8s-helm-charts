{{- $secretName := include "openstack-ck8s-cluster.cloudCredentialsSecretName" . -}}
{{- $existingSecret := lookup "v1" "Secret" .Release.Namespace $secretName  -}}
---
apiVersion: addons.cluster.x-k8s.io/v1alpha1
kind: HelmChartProxy
metadata:
  name: {{ include "openstack-ck8s-cluster.componentName" (list . "csi-cinder") }}
  labels: {{ include "openstack-ck8s-cluster.componentLabels" (list . "csi-cinder") | nindent 4 }}
spec:
  clusterSelector:
    matchLabels:
      csiCinderChart: enabled
  namespace: openstack-system
  repoURL: https://kubernetes.github.io/cloud-provider-openstack
  chartName: openstack-cinder-csi
  version: 2.32.0
  valuesTemplate: |
    csi:
        plugin:
          controllerPlugin:
            nodeSelector:
              node-role.kubernetes.io/control-plane: ""
            tolerations:
              - key: node-role.kubernetes.io/control-plane
                effect: NoSchedule
          volumes:
          - name: cacert
            emptyDir: {}
          volumeMounts:
          - name: cloud-config
            mountPath: /etc/config
            readOnly: true
          - name: cloud-config
            mountPath: /etc/kubernetes
            readOnly: true
    secret:
      enabled: true
      create: true
      name: cinder-csi-cloud-config
      data:
        {{- if $existingSecret }}
        {{- range $key, $value := $existingSecret.data }}
        {{ $key }}: {{ $value | b64dec | toYaml | indent 8 }}
        {{- end }}
        {{- end }}
        cloud.conf: |
          [Global]
          use-clouds=true
          clouds-file=/etc/config/clouds.yaml
          cloud={{ .Values.cloudName }}
          tls-insecure=true
          [Networking]
          internal-network-name={{ "{{" }} .InfraCluster.status.network.name {{ "}}" }}
          [LoadBalancer]
          {{- $lbItems := default dict .Values.addons.openstack.cloudConfig.LoadBalancer }}
          {{- if hasKey $lbItems "floating-network-id" }}
          floating-network-id={{ index $lbItems "floating-network-id" }}
          {{- else }}
          floating-network-id={{ "{{" }} .InfraCluster.status.externalNetwork.id {{ "}}" }}
          {{- end }}
          {{- range $lbName, $lbValue := omit $lbItems "floating-network-id" }}
          {{ $lbName }}={{ $lbValue }}
          {{- end }}
    storageClass:
      custom: |-
{{- if and .Values.addons.openstack.csiCinder.defaultStorageClass .Values.addons.openstack.csiCinder.defaultStorageClass.enabled }}
        {{- with .Values.addons.openstack.csiCinder.defaultStorageClass }}
        ---
        apiVersion: storage.k8s.io/v1
        kind: StorageClass
        metadata:
          name: {{ .name }}
          {{- if .isClusterDefault }}
          annotations:
            storageclass.kubernetes.io/is-default-class: "true"
          {{- end }}
        provisioner: cinder.csi.openstack.org
        parameters:
          availability: {{ .availabilityZone }}
          {{- with .volumeType }}
          type: {{ . }}
          {{- end }}
          {{- with .fstype }}
          fstype: {{ . }}
          {{- end }}
        reclaimPolicy: {{ default "Delete" .reclaimPolicy }}
        allowVolumeExpansion: {{ dig "allowVolumeExpansion" true . | ternary "true" "false" }}
        volumeBindingMode: {{ default "WaitForFirstConsumer" .volumeBindingMode }}
        {{- with .allowedTopologies }}
        allowedTopologies: {{ toYaml . | nindent 10 }}
        {{- end }}
        {{- end }}
{{- end }}
{{- range .Values.addons.openstack.csiCinder.additionalStorageClasses }}
        ---
        apiVersion: storage.k8s.io/v1
        kind: StorageClass
        metadata:
          name: {{ required "name is required for storage classes" .name }}
        provisioner: cinder.csi.openstack.org
        parameters:
          availability: {{ default "nova" .availabilityZone }}
          {{- with .volumeType }}
          type: {{ . }}
          {{- end }}
          {{- with .fstype }}
          fstype: {{ . }}
          {{- end }}
        reclaimPolicy: {{ default "Delete" .reclaimPolicy }}
        allowVolumeExpansion: {{ dig "allowVolumeExpansion" true . | ternary "true" "false" }}
        volumeBindingMode: {{ default "WaitForFirstConsumer" .volumeBindingMode }}
        {{- with .allowedTopologies }}
        allowedTopologies: {{ toYaml . | nindent 10 }}
        {{- end }}
{{- end }}
